// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  output          = "../src/prisma/client"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model accounts {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model sessions {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("sessions")
}

model users {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?   // For credentials provider
  company       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  accounts accounts[]
  sessions sessions[]
  
  // TimeROI specific fields
  timeBlocks   timeblocks[]
  goals        goals[]
  settings     user_settings?
  @@map("users")
}

model verfication_tokens {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model timeblocks {
  id          String   @id @default(cuid())
  userId      String
  title       String
  description String?
  startTime   DateTime
  endTime     DateTime
  
  // Value tier: 10000, 1000, 100, 10
  valueTier   Int
  
  // Category: REV, REC, REL, ADM, DEL, MTG
  category    String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("timeblocks")
}

model goals {
  id           String   @id @default(cuid())
  userId       String
  type         String   // "strategic", "revenue", "recovery", "admin" 
  targetHours  Float    // target hours per week
  currentHours Float    @default(0)
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  user users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("goals")
}

model user_settings {
  id              String  @id @default(cuid())
  userId          String  @unique
  timezone        String  @default("UTC")
  workingHours    Json    // {start: "09:00", end: "18:00"}
  notifications   Json    // notification preferences
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  user users @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_settings")
}